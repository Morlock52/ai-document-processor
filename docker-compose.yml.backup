version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3005:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8000
    depends_on:
      - api
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - document-network

  api:
    build: ./backend
    ports:
      - "8005:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=postgresql://docuser:docpass@postgres:5432/docprocessor
      - REDIS_URL=redis://redis:6379/0
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - document-network

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=postgresql://docuser:docpass@postgres:5432/docprocessor
      - REDIS_URL=redis://redis:6379/0
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend/app:/app/backend/app
      - ./worker:/app/worker
      - ./uploads:/app/uploads
    command: bash -c "rq worker --url redis://redis:6379/0 --path /app"
    networks:
      - document-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=docuser
      - POSTGRES_PASSWORD=docpass
      - POSTGRES_DB=docprocessor
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docuser -d docprocessor"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - document-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - document-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - api
    networks:
      - document-network



volumes:
  postgres_data:
  redis_data: